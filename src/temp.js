function createWebAssemblyModulePromise (deps) {
    var p = new Promise(function(resolve){
        var compatibleModule;
        if (typeof WebAssembly !== 'undefined') {
            var buffer = new ArrayBuffer(1614);
            var uint8 = new Uint8Array(buffer);
            uint8.set([0,97,115,109,1,0,0,0,1,36,7,96,0,0,96,2,127,127,0,96,2,127,127,1,127,96,1,124,1,124,96,2,124,127,1,124,96,1,127,1,127,96,1,124,1,124,3,9,8,0,1,2,4,6,3,5,0,4,4,1,112,0,1,5,3,1,0,0,6,16,3,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,7,57,7,6,109,101,109,111,114,121,2,0,5,116,97,98,108,101,1,0,4,115,116,101,112,0,0,4,105,110,105,116,0,1,3,97,100,100,0,2,10,70,105,98,111,110,97,99,99,105,51,0,5,3,102,105,98,0,6,9,7,1,0,65,0,11,1,7,10,137,11,8,161,2,1,8,127,35,1,65,1,107,33,6,35,0,65,1,107,33,7,3,64,2,64,32,0,35,1,79,13,0,32,0,65,1,107,32,6,32,0,27,33,4,65,0,32,0,65,1,106,32,0,32,6,70,27,33,5,65,0,33,1,3,64,2,64,32,1,35,0,79,13,0,65,0,32,1,65,1,106,32,1,32,7,70,27,34,2,32,5,35,0,108,106,45,0,0,32,5,35,0,108,32,1,106,45,0,0,32,1,65,1,107,32,7,32,1,27,34,3,32,5,35,0,108,106,45,0,0,32,0,35,0,108,32,2,106,45,0,0,32,0,35,0,108,32,3,106,45,0,0,32,4,35,0,108,32,2,106,45,0,0,32,4,35,0,108,32,3,106,45,0,0,32,4,35,0,108,32,1,106,45,0,0,106,106,106,106,106,106,106,33,2,32,0,35,0,108,32,1,106,45,0,0,4,64,32,2,65,2,72,34,3,4,127,32,3,5,32,2,65,3,74,11,4,64,35,2,32,0,35,0,108,106,32,1,106,65,0,58,0,0,11,5,32,2,65,3,70,4,64,35,2,32,0,35,0,108,106,32,1,106,65,1,58,0,0,11,11,32,1,65,1,106,33,1,12,1,11,11,32,0,65,1,106,33,0,12,1,11,11,11,17,0,32,0,36,0,32,1,36,1,35,0,35,1,108,36,2,11,64,1,3,127,3,64,2,64,32,2,32,0,78,13,0,65,0,33,3,3,64,2,64,32,3,32,1,78,13,0,32,4,32,2,32,3,108,106,33,4,32,3,65,1,106,33,3,12,1,11,11,32,2,65,1,106,33,2,12,1,11,11,32,4,11,165,1,1,1,127,32,1,65,255,7,74,4,64,32,0,68,0,0,0,0,0,0,224,127,162,33,0,32,1,65,255,7,107,34,1,65,255,7,74,4,64,32,0,68,0,0,0,0,0,0,224,127,162,33,0,32,1,65,255,7,107,34,1,65,255,7,34,2,32,1,32,2,72,27,33,1,11,5,32,1,65,130,120,72,4,64,32,0,68,0,0,0,0,0,0,96,3,162,33,0,32,1,65,201,7,106,34,1,65,130,120,72,4,64,32,0,68,0,0,0,0,0,0,96,3,162,33,0,32,1,65,201,7,106,34,1,65,130,120,34,2,32,1,32,2,74,27,33,1,11,11,11,32,0,32,1,172,66,255,7,124,66,52,134,191,162,11,193,6,3,4,127,1,126,4,124,32,0,189,34,5,66,32,136,167,33,1,32,5,167,34,2,32,1,65,255,255,255,255,7,113,34,3,114,69,4,64,68,0,0,0,0,0,0,240,63,15,11,32,3,65,128,128,192,255,7,74,34,4,4,127,32,4,5,32,3,65,128,128,192,255,7,70,34,4,4,127,32,2,5,32,4,11,11,4,64,68,0,0,0,0,0,0,0,64,32,0,160,15,11,32,2,69,4,64,32,3,65,128,128,192,255,7,70,4,64,32,0,68,0,0,0,0,0,0,0,0,32,1,65,0,78,27,15,11,32,3,65,128,128,192,255,3,70,4,64,32,1,65,0,78,4,64,68,0,0,0,0,0,0,0,64,15,11,68,0,0,0,0,0,0,224,63,15,11,32,1,65,128,128,128,128,4,70,4,64,68,0,0,0,0,0,0,16,64,15,11,32,1,65,128,128,128,255,3,70,4,64,68,205,59,127,102,158,160,246,63,15,11,11,68,0,0,0,0,0,0,0,64,33,6,2,64,32,3,65,128,128,128,143,4,74,4,124,12,1,5,68,0,0,0,0,0,0,240,63,33,7,68,0,0,0,0,0,0,0,0,11,33,6,32,0,32,0,189,66,128,128,128,128,112,131,191,34,8,161,32,7,162,32,0,32,6,162,160,34,0,32,8,32,7,162,34,8,160,34,6,189,34,5,66,32,136,167,33,1,32,5,167,33,4,2,64,2,64,32,1,65,128,128,192,132,4,78,4,64,32,1,65,128,128,192,132,4,107,32,4,114,32,0,68,254,130,43,101,71,21,151,60,160,32,6,32,8,161,100,114,13,1,5,32,1,65,255,255,255,255,7,113,65,128,152,195,132,4,78,4,64,32,1,65,128,152,195,132,124,107,32,4,114,32,0,32,6,32,8,161,101,114,13,3,11,11,32,1,65,255,255,255,255,7,113,34,4,65,20,117,65,255,7,107,33,3,65,0,33,2,32,4,65,128,128,128,255,3,74,4,64,65,255,255,63,32,1,65,128,128,192,0,32,3,65,1,106,117,106,34,2,65,255,255,255,255,7,113,65,20,117,65,255,7,107,34,3,117,65,127,115,32,2,113,172,66,32,134,191,33,7,32,2,65,255,255,63,113,65,128,128,192,0,114,65,20,32,3,107,117,33,2,32,1,65,0,72,4,64,65,0,32,2,107,33,2,11,32,8,32,7,161,33,8,11,68,0,0,0,0,0,0,240,63,68,0,0,0,0,0,0,240,63,32,0,32,8,160,189,66,128,128,128,128,112,131,191,34,7,68,0,0,0,0,67,46,230,63,162,34,9,32,0,32,7,32,8,161,161,68,239,57,250,254,66,46,230,63,162,32,7,68,57,108,168,12,97,92,32,190,162,160,34,0,160,34,6,32,6,32,6,32,6,162,34,7,68,62,85,85,85,85,85,197,63,32,7,68,147,189,190,22,108,193,102,191,32,7,68,44,222,37,175,106,86,17,63,32,7,68,241,107,210,197,65,189,187,190,32,7,68,208,164,190,114,105,55,102,62,162,160,162,160,162,160,162,160,162,161,34,7,162,32,7,68,0,0,0,0,0,0,0,64,161,163,32,0,32,6,32,9,161,161,34,8,32,6,32,8,162,160,161,32,6,161,161,34,6,189,66,32,136,167,32,2,65,20,116,106,34,1,65,20,117,65,0,76,4,124,32,6,32,2,16,3,5,32,6,189,66,255,255,255,255,15,131,32,1,172,66,32,134,132,191,11,162,15,11,68,0,0,0,0,0,0,240,127,15,11,68,0,0,0,0,0,0,0,0,15,11,68,0,0,0,0,0,0,240,127,68,0,0,0,0,0,0,0,0,32,1,65,0,74,27,11,6,0,32,0,16,4,11,28,0,32,0,65,2,72,4,64,65,1,15,11,32,0,65,2,107,16,6,32,0,65,1,107,16,6,106,11,3,0,1,11,0,38,16,115,111,117,114,99,101,77,97,112,112,105,110,103,85,82,76,20,109,111,100,117,108,101,69,110,116,114,121,46,119,97,115,109,46,109,97,112]);
            'use strict';

            var WebAssemblyModule = function WebAssemblyModule(deps) {
                var defaultDeps = {
                    'global': {},
                    'env': {
                        'memory': new WebAssembly.Memory({
                            initial: 10,
                            limit: 100 }),
                        'table': new WebAssembly.Table({
                            initial: 0,
                            element: 'anyfunc' })
                    }
                };
                return new WebAssembly.Instance(new WebAssembly.Module(buffer), deps || defaultDeps);
            };
            compatibleModule = WebAssemblyModule;

        }
        else {
            "use strict";
            Object.defineProperty(exports, "__esModule", { value: true });
            var w, // width
                h, // height
                s; // total size
            /** Initializes width and height. */
            function init(w_, h_) {
                w = w_;
                h = h_;
                s = w * h;
            }
            exports.init = init;
            function fib(n) {
                if (n < 2) {
                    return 1;
                }
                return fib(n - 2) + fib(n - 1);
            }
            exports.fib = fib;
            function add(x, y) {
                var a = 0;
                for (var i = 0; i < x; i++) {
                    for (var j = 0; j < y; j++) {
                        a += j * i;
                    }
                }
                return a;
            }
            exports.add = add;
            function Fibonacci3(n) {
                var ac2 = Math.pow(2, n);
                return ac2;
            }
            exports.Fibonacci3 = Fibonacci3;
            /** Performs one step. */
            function step() {
                var hm1 = h - 1, wm1 = w - 1;
                for (var y = 0; y < h; ++y) {
                    var ym1 = select(hm1, y - 1, y == 0), yp1 = select(0, y + 1, y == hm1);
                    for (var x = 0; x < w; ++x) {
                        var xm1 = select(wm1, x - 1, x == 0), xp1 = select(0, x + 1, x == wm1);
                        var n = (load(ym1 * w + xm1) + load(ym1 * w + x) + load(ym1 * w + xp1) +
                            load(y * w + xm1) + load(y * w + xp1) +
                            load(yp1 * w + xm1) + load(yp1 * w + x) + load(yp1 * w + xp1));
                        if (load(y * w + x)) {
                            if (n < 2 || n > 3)
                                store(s + y * w + x, 0);
                        }
                        else if (n == 3)
                            store(s + y * w + x, 1);
                    }
                }
            }
            exports.step = step;

            compatibleModule = function() {};          compatibleModule.prototype.exports = exports;
        }
        resolve(compatibleModule().exports);;
    });
    return p
}